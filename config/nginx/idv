server {
	# listen 80 default deferred; # for Linux
	# listen 80 default accept_filter=httpready; # for FreeBSD
	listen 80 default deferred;

	client_max_body_size 4G;
	server_name _;

	# ~2 seconds is often enough for most folks to parse HTML/CSS and
	# retrieve needed images/icons/frames, connections are cheap in
	# nginx so increasing this is generally safe...
	keepalive_timeout 5;

	access_log	/webapps/idv/log/nginx-access.log;
	error_log	/webapps/idv/log/nginx-error.log;

	gzip		on;
	gzip_disable	"msie6";
	gzip_vary	on;
	gzip_proxied	any;
	gzip_comp_level	6;
	gzip_buffers	16 8k;
	gzip_http_version	1.1;
	gzip_types	text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
 
	location /static/ {
		alias   /webapps/idv/indeverkoop/idv/static/;
	}

	location /media/ {
		alias   /webapps/idv/indeverkoop/idv/media/;
	}

	location / {
		# an HTTP header important enough to have its own Wikipedia entry:
		#   http://en.wikipedia.org/wiki/X-Forwarded-For
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# enable this if and only if you use HTTPS, this helps Rack
		# set the proper protocol for doing redirects:
		# proxy_set_header X-Forwarded-Proto https;

		# pass the Host: header from the client right along so redirects
		# can be set properly within the Rack application
		proxy_set_header Host $http_host;

		# we don't want nginx trying to do something clever with
		# redirects, we set the Host: header above already.
		proxy_redirect off;

		# set "proxy_buffering off" *only* for Rainbows! when doing
		# Comet/long-poll stuff.  It's also safe to set if you're
		# using only serving fast clients with Unicorn + nginx.
		# Otherwise you _want_ nginx to buffer responses to slow
		# clients, really.
		# proxy_buffering off;

		# Try to serve static files from nginx, no point in making an
		# *application* server like Unicorn/Rainbows! serve static files.
		uwsgi_read_timeout 10s;
		include /etc/nginx/uwsgi_params;
		uwsgi_pass unix:/tmp/uwsgi-idv.sock;
	}

	# Error pages
	error_page 500 502 503 504 /500.html;
	location = /500.html {
		root /webapps/idv/indeverkoop/idv/static;
	}
}
